services:
  postgres:
    image: postgres:15-alpine
    container_name: library_postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: neondb
      POSTGRES_USER: neondb_owner
      POSTGRES_PASSWORD: postgres_password_123
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - library_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U neondb_owner -d neondb || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  migrate:
    image: c4lord/library-app:latest
    container_name: library_migrate
    user: "0:0"
    environment:
      # Database Configuration
      POSTGRES_DB: neondb
      POSTGRES_USER: neondb_owner
      POSTGRES_PASSWORD: postgres_password_123
      DATABASE_URL: postgresql://neondb_owner:postgres_password_123@postgres:5432/neondb?sslmode=disable
      
      # NextAuth Configuration
      NEXTAUTH_SECRET: your-super-secret-nextauth-key-min-32-chars-long-2025
      NEXTAUTH_URL: http://localhost:3000
      
      # Cloudinary Configuration
      CLOUDINARY_API_SECRET: your_cloudinary_api_secret_hereapi
      CLOUDINARY_API_KEY: your_cloudinary_api_key_here
      CLOUDINARY_CLOUD_NAME: your_cloudinary_cloud_name
      
      # Google OAuth Configuration
      GOOGLE_CLIENT_SECRET: your_google_oauth_client_secret
      GOOGLE_CLIENT_ID: your_google_oauth_client_id.apps.googleusercontent.com
      
      # API Configuration
      NEXT_PUBLIC_API_URL: http://localhost:3000/
      GeminiApiKey: your_gemini_api_key_from_google_ai_studio
      
      # Server Configuration
      NEXT_SERVER_ACTIONS_ENCRYPTION_KEY: your-32-char-encryption-key-here-2025
      NODE_ENV: production
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - library_network
    volumes:
      - ./drizzle:/app/drizzle
      - ./db:/app/db
      - ./src:/app/src
      - ./drizzle.config.json:/app/drizzle.config.json
      - ./drizzle.config.ts:/app/drizzle.config.ts
      - ./package.json:/app/package.json
      - ./package-lock.json:/app/package-lock.json
      - migrate_node_modules:/app/node_modules
    working_dir: /app
    command: >
      sh -c "
      sleep 10 && 
      echo 'Installing dependencies...' &&
      npm ci --include=dev &&
      echo 'Creating drizzle directory...' &&
      mkdir -p /app/drizzle &&
      echo 'Generating migrations...' &&
      ./node_modules/.bin/drizzle-kit generate &&
      echo 'Running migrations...' &&
      ./node_modules/.bin/drizzle-kit migrate &&
      echo 'Migration completed successfully!'
      "

  app:
    image: c4lord/library-app:latest
    container_name: library_app
    restart: unless-stopped
    ports:
      - "4444:3000"
    environment:
      # Database Configuration
      POSTGRES_DB: neondb
      POSTGRES_USER: neondb_owner
      POSTGRES_PASSWORD: postgres_password_123
      DATABASE_URL: postgresql://neondb_owner:postgres_password_123@postgres:5432/neondb?sslmode=disable
      
      # NextAuth Configuration
      NEXTAUTH_SECRET: your-super-secret-nextauth-key-min-32-chars-long-2025
      NEXTAUTH_URL: http://localhost:3000
      
      # Cloudinary Configuration
      CLOUDINARY_API_SECRET: your_cloudinary_api_secret_here
      CLOUDINARY_API_KEY: your_cloudinary_api_key_here
      CLOUDINARY_CLOUD_NAME: your_cloudinary_cloud_name
      
      # Google OAuth Configuration
      GOOGLE_CLIENT_SECRET: your_google_oauth_client_secret
      GOOGLE_CLIENT_ID: your_google_oauth_client_id.apps.googleusercontent.com
      
      # API Configuration
      NEXT_PUBLIC_API_URL: http://localhost:3000/
      GeminiApiKey: your_gemini_api_key_from_google_ai_studio
      
      # Server Configuration
      NEXT_SERVER_ACTIONS_ENCRYPTION_KEY: your-32-char-encryption-key-here-2025
      NODE_ENV: production
    depends_on:
      postgres:
        condition: service_healthy
      migrate:
        condition: service_completed_successfully
    networks:
      - library_network
    volumes:
      - ./uploads:/app/uploads
    working_dir: /app
    dns:
      - 8.8.8.8
      - 8.8.4.4
    extra_hosts:
      - "host.docker.internal:host-gateway"

  adminer:
    image: adminer:latest
    container_name: library_adminer
    restart: unless-stopped
    ports:
      - "7777:8080"
    networks:
      - library_network
    depends_on:
      - postgres

volumes:
  postgres_data:
    driver: local
  migrate_node_modules:
    driver: local

networks:
  library_network:
    driver: bridge
